@model GymOCommunity.Models.Report

@{
    ViewData["Title"] = "Báo cáo bài viết";
}

<div class="container mt-4">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-danger text-white">
            <h3 class="mb-0"><i class="fas fa-flag me-2"></i>BÁO CÁO BÀI VIẾT</h3>
        </div>
        <div class="card-body">
            <form asp-action="Create" class="needs-validation" novalidate>
                <input type="hidden" asp-for="PostId" value="@ViewBag.PostId" />

                <div class="mb-4">
                    <label asp-for="Description" class="form-label fw-bold">Lý do báo cáo <span class="text-danger">*</span></label>
                    <textarea asp-for="Description" class="form-control" rows="5"
                              placeholder="Vui lòng mô tả chi tiết lý do báo cáo (tối thiểu 20 ký tự)"
                              required></textarea>
                    <div class="invalid-feedback">
                        Vui lòng nhập ít nhất 20 ký tự mô tả
                    </div>
                    <span asp-validation-for="Description" class="text-danger small"></span>
                    <div class="form-text mt-1">
                        Mọi báo cáo sẽ được xem xét nghiêm túc bởi đội ngũ quản trị viên
                    </div>
                </div>

                <div class="d-flex justify-content-between align-items-center mt-4">
                    <a href="javascript:history.back()" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i> Quay lại
                    </a>
                    <button type="submit" class="btn btn-danger px-4">
                        <i class="fas fa-paper-plane me-2"></i> GỬI BÁO CÁO
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Client-side validation
        (function() {
            'use strict'

            const forms = document.querySelectorAll('.needs-validation')

            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}